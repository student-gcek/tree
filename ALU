library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity ALU_Top is
    Port ( 
        A        : in  STD_LOGIC_VECTOR(7 downto 0);
        B        : in  STD_LOGIC_VECTOR(7 downto 0);
        ALU_Sel  : in  STD_LOGIC_VECTOR(2 downto 0);
        ALU_Out  : out STD_LOGIC_VECTOR(7 downto 0);
        Zero     : out STD_LOGIC
    );
end ALU_Top;

architecture Behavioral of ALU_Top is
    signal result : STD_LOGIC_VECTOR(7 downto 0);
begin

    process(A, B, ALU_Sel)
        variable a_unsigned : unsigned(7 downto 0);
        variable b_unsigned : unsigned(7 downto 0);
        variable res_unsigned : unsigned(7 downto 0);
    begin
        a_unsigned := unsigned(A);
        b_unsigned := unsigned(B);
        
        case ALU_Sel is
            when "000" =>  
                res_unsigned := a_unsigned + b_unsigned;
                result <= std_logic_vector(res_unsigned);
            when "001" => 
                res_unsigned := a_unsigned - b_unsigned;
                result <= std_logic_vector(res_unsigned);
            when "010" =>  
                result <= A and B;
            when "011" => 
                result <= A or B;
            when "100" =>  
                result <= A xor B;
            when "101" =>  
                result <= not A;
            when "110" =>  
                result <= A(6 downto 0) & '0';
            when "111" =>  
                result <= '0' & A(7 downto 1);
            when others =>
                result <= (others => '0');
        end case;
    end process;

    ALU_Out <= result;

   
    process(result)
    begin
        if result = "00000000" then
            Zero <= '1';
        else
            Zero <= '0';
        end if;
    end process;

end Behavioral;
